package application;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

import entities.Emplyoee;

public class Program {
	public static void main(String[] args) {
		List<Emplyoee> employees = new ArrayList<>();
		int numberEmployes;

		Locale.setDefault(Locale.US);

		Scanner sc = new Scanner(System.in);
		System.out.print("How many emplyoees will be registered? ");
		numberEmployes = sc.nextInt();

		for (int i = 1; i <= numberEmployes; i++) {
			System.out.print("Employee ID #" + i + ": ");
			int id = sc.nextInt();
			sc.nextLine();
			System.out.print("Employee Name #" + i + ": ");
			String name = sc.nextLine();
			System.out.print("Employee Salary #" + i + ": ");
			double salary = sc.nextDouble();
			employees.add(new Emplyoee(id, name, salary));
			if (i != numberEmployes) {
				System.out.println("Employee ID #" + i + ", Registered!!!");
				System.out.println("-------------------------------------");
			}else {
				System.out.println("End Registers!!!");
				System.out.println("-------------------------------------");
			}
		}
		
		System.out.print("Ente the employee id that will have salary increase: ");
		int id = sc.nextInt();
		double salary = employees.stream().filter(x -> x.getId() == id).findFirst();

		sc.close();
	}
}

/*
 * • Tamanho da lista: size() • Obter o elemento de uma posição: get(position) •
 * Inserir elemento na lista: add(obj), add(int, obj) • Remover elementos da
 * lista: remove(obj), remove(int), removeIf(Predicate) • Encontrar posição de
 * elemento: indexOf(obj), lastIndexOf(obj) • Filtrar lista com base em
 * predicado: List<Integer> result = list.stream().filter(x -> x >
 * 4).collect(Collectors.toList()); • Encontrar primeira ocorrência com base em
 * predicado: Integer result = list.stream().filter(x -> x >
 * 4).findFirst().orElse(null);
 */
